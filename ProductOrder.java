/*
 * class ProductOrder defines an order of a specific product by a customer
 *
 * The order number is generated by the system when a ProductOrder object is created.
 *
 * Also stores any product options chosen by this customer (e.g. paperback book, certain size of a product etc)
 */
public class ProductOrder
{
	private String 		orderNumber;
	private Product 	product;
	private String    productOptions;
	private Customer 	customer;

	/** ProductOrder Constructor
	 * @param String OrderNumber			- Name of item
	 * @param Product product				- Id of item
	 * @param Customer customer				- Price of item
 	 * @param String productOptions 		- Stock of item
	 */
	public ProductOrder(String orderNumber, Product product, Customer customer, String productOptions)
	{
		this.orderNumber = orderNumber;
		this.product = product;
		this.customer = customer;
		this.productOptions = productOptions;
	}

	/*
	 * This method will return order number
	 */
	public String getOrderNumber()
	{
		return orderNumber;
	}

	/*
	 * This method will set order number
	 * @param String orderNumber
	 */
	public void setOrderNumber(String orderNumber)
	{
		this.orderNumber = orderNumber;
	}

	/*
	 * This method will return product object
	 */
	public Product getProduct()
	{
		return product;
	}

	/*
	 * This method will set product object
	 * @param Product product
	 */
	public void setProduct(Product product)
	{
		this.product = product;
	}

	/*
	 * This method will return customer object
	 */
	public Customer getCustomer()
	{
		return customer;
	}

	/*
	 * This method will set customer object
	 * @param Customer customer
	 */
	public void setCustomer(Customer customer)
	{
		this.customer = customer;
	}

	public void print()
	{
		System.out.printf("\nOrder # %3s Customer Id: %3s Product Id: %3s Product Name: %12s Options: %8s", orderNumber, customer.getId(), product.getId(), product.getName(),
				productOptions);
	}
	/*
	 * Two ProductOrder objects are equal if they have the same order number string.
	 */
	public boolean equals(Object other)
	{
		// Compare two ProductOrder objects based on their orderNumber strings
		ProductOrder otherP = (ProductOrder) other;
		return this.orderNumber.equals(otherP.getOrderNumber());
	}
}
